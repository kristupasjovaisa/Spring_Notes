<plugin>

    <!-- Specify the maven code generator plugin -->
    <!-- Use org.jooq                for the Open Source Edition
             org.jooq.pro            for commercial editions with Java 17 support,
             org.jooq.pro-java-11    for commercial editions with Java 11 support,
             org.jooq.pro-java-8     for commercial editions with Java 8 support,
             org.jooq.trial          for the free trial edition with Java 17 support,
             org.jooq.trial-java-11  for the free trial edition with Java 11 support,
             org.jooq.trial-java-8   for the free trial edition with Java 8 support

         Note: Only the Open Source Edition is hosted on Maven Central.
               Import the others manually from your distribution -->
    <groupId>org.jooq</groupId>
    <artifactId>jooq-codegen-maven</artifactId>
    <version>3.17.3</version>

    <!-- The plugin should hook into the generate goal -->
    <executions>
        <execution>
            <goals>
                <goal>generate</goal>
            </goals>
        </execution>
    </executions>

    <!-- Manage the plugin's dependency. In this example, we'll use a PostgreSQL database -->
    <dependencies>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>runtime</scope>
        </dependency>
    </dependencies>

    <!-- Specify the plugin configuration.
         The configuration format is the same as for the standalone code generator -->
    <configuration>

        <!-- JDBC connection parameters -->
        <jdbc>
            <driver>org.h2.Driver</driver>
            <url>jdbc:h2:mem:jooq;DB_CLOSE_DELAY=-1</url>
            <user>sa</user>
            <password>sa</password>
        </jdbc>

        <!-- Generator parameters -->
        <generator>
            <database>
                <name> org.jooq.meta.h2.H2Database</name>
                <includes>.*</includes>
                <excludes></excludes>
                <!-- In case your database supports catalogs, e.g. SQL Server:
                <inputCatalog>public</inputCatalog>
                  -->
                <inputSchema>public</inputSchema>
            </database>
            <target>
                <packageName>org.jooq.codegen.maven.example</packageName>
                <directory>target/generated-sources/jooq</directory>
            </target>
        </generator>
    </configuration>
</plugin>